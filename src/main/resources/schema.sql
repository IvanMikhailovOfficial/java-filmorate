DROP TABLE IF EXISTS mpa CASCADE;
DROP TABLE IF EXISTS film_mpa CASCADE;
DROP TABLE IF EXISTS genres CASCADE;
DROP TABLE IF EXISTS film_genre CASCADE;
DROP TABLE IF EXISTS friends CASCADE;
DROP TABLE IF EXISTS film_likes CASCADE;
DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS films CASCADE;

CREATE TABLE IF NOT EXISTS mpa
(
id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
name varchar(255) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS films
(
id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
name varchar(255) NOT NULL,
description varchar(255),
release_date date NOT NULL,
duration int NOT NULL,
mpa int NOT NULL
);

CREATE TABLE IF NOT EXISTS film_mpa
(
film_id int REFERENCES films(id) ON DELETE CASCADE,
mpa_id int REFERENCES mpa(id) ON DELETE CASCADE,
PRIMARY KEY(film_id, mpa_id)
);

CREATE TABLE IF NOT EXISTS genres
(
genre_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
name varchar(255) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS film_genre
(
film_id int REFERENCES films(id) ON DELETE CASCADE,
genre_id int REFERENCES genres(genre_id) ON DELETE RESTRICT,
PRIMARY KEY(film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS users
(
id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
email varchar(255) NOT NULL UNIQUE,
login varchar(255) NOT NULL,
name varchar(255),
birthday date
);

CREATE TABLE IF NOT EXISTS friends
(
user_id int REFERENCES users(id) ON DELETE CASCADE,
friend_id int REFERENCES users(id) ON DELETE CASCADE,
PRIMARY KEY(user_id, friend_id)
);

CREATE TABLE IF NOT EXISTS film_likes
(
film_id int REFERENCES films(id) ON DELETE CASCADE,
user_id int REFERENCES users(id) ON DELETE CASCADE,
PRIMARY KEY(film_id, user_id)
);


-- описание проекта: приложение является
-- небольшой соцальной сетью для просмотра
-- фильмов и рекомендаций их друзьям.
-- Функционал приложения:
-- добавление, удаление и изменение фильмов и юзеров,
-- добавить отзыв к фильму,
-- поставить лайк фильму,
-- давать рекомендации к просмотру,
-- добавление и удаление из друзей,
-- смотреть общих друзей.
-- ER диаграмма базы данных к приложению filmorate
-- скрин
-- примеры запросов к БД:
-- получение юзера с id 1:
-- SELECT * FROM users
-- WHERE id = 1;
-- получение фильма с id 2:
-- SELECT * FROM films
-- WHERE id = 2;